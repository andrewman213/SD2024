function likePost(postId) {
    fetch('like_post.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ post_id: postId })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const likeCountElement = document.querySelector(`.like-count[data-post-id="${postId}"]`);
            likeCountElement.textContent = parseInt(likeCountElement.textContent) + (data.liked ? 1 : -1);
        } else {
            alert('Error: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

function openCommentsModal(postId) {
    fetch('get_comments.php', {
        method: 'POST',
        body: JSON.stringify({ post_id: postId }),
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(comments => {
        const commentsList = document.getElementById(`comments-${postId}`); // Modify here to use the comment_id as the target
        commentsList.innerHTML = '';
        comments.forEach(comment => {
            const commentElement = document.createElement('div');
            commentElement.className = 'comment-item';
            commentElement.innerHTML = `
                <div class="comment-user">${comment.user_id}</div>
                <div class="comment-text">${comment.comment_text}</div>
                <div class="comment-date">${comment.created_at}</div>
            `;
            commentsList.appendChild(commentElement);
        });
        document.getElementById('commentsModal').style.display = 'block';
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

function closeCommentsModal() {
    document.getElementById('commentsModal').style.display = 'none';
}

function submitComment(postId, commentText, commentButton) {
    const formData = new FormData();
    formData.append('post_id', postId);
    formData.append('comment', commentText);

    fetch('add_comment.php', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        console.log(data); // For debugging
        if (data.success) {
            // Clear the textarea
            document.querySelector(`textarea[data-post-id="${postId}"]`).value = '';
            commentButton.textContent = `Read Comments (${data.newCommentCount})`;

            // Update the comments list dynamically
            const commentsList = document.getElementById(`comments-${postId}`);
            if (commentsList) {
                const commentElement = document.createElement('div');
                commentElement.className = 'comment-item';
                commentElement.innerHTML = `
                    <div class="comment-user">User</div>
                    <div class="comment-text">${commentText}</div>
                    <div class="comment-date">Just now</div>
                `;
                commentsList.appendChild(commentElement);
            } else {
                console.error('Could not find the comments list element.');
            }
        } else {
            alert('Failed to post comment: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

document.addEventListener('DOMContentLoaded', () => {
    const likeButtons = document.querySelectorAll('.like-button');
    likeButtons.forEach(button => {
        button.addEventListener('click', (e) => {
            e.preventDefault();
            const postId = button.getAttribute('data-post-id');
            likePost(postId);
        });
    });

    document.querySelectorAll('button[data-post-id]').forEach(button => {
        button.addEventListener('click', function() {
            const postId = this.getAttribute('data-post-id');
            openCommentsModal(postId);
        });
    });

    document.querySelectorAll('.comments form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            const postId = this.querySelector('input[name="post_id"]').value;
            const commentText = this.querySelector('textarea[name="comment"]').value;
            const commentButton = this.querySelector(`button[data-post-id="${postId}"]`);
            submitComment(postId, commentText, commentButton);
        });
    });
});
